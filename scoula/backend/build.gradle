plugins {
    id 'java'
    id 'war'
}

group 'org.scoula'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
    springVersion = '5.3.37'
    lombokVersion = '1.18.30'
    springSecurityVersion = '5.8.13'
}

sourceCompatibility = '1.17'
targetCompatibility = '1.17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // 데이터베이스
    implementation 'com.mysql:mysql-connector-j:9.3.0'
    implementation 'com.zaxxer:HikariCP:2.7.4'

    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation 'org.mybatis:mybatis:3.4.6'
    implementation 'org.mybatis:mybatis-spring:1.3.2'

    //보안
    implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")

    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")

    // swagger
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // ===== Spring Framework 관련 의존성 =====
    // Spring Core 컨테이너 - IoC/DI 기능 제공 (5.3.39 - 마지막 5.3.x 버전, 보안 패치 포함)
    implementation ("org.springframework:spring-context:${springVersion}")
            { exclude group: 'commons-logging', module: 'commons-logging' } // commons-logging 제외 (Log4j2 사용)
    // Spring MVC - 웹 애플리케이션 개발을 위한 프레임워크
    implementation "org.springframework:spring-webmvc:${springVersion}"
    // JSR-330 의존성 주입 표준 어노테이션 지원 (@Inject 등)
    implementation 'javax.inject:javax.inject:1'

    // ===== AOP (Aspect-Oriented Programming) 관련 의존성 =====
    // AspectJ 런타임 - AOP 기능 실행을 위한 라이브러리 (최신 마이너 버전)
    implementation "org.aspectj:aspectjrt:1.9.20"
    // AspectJ 위버 - 컴파일/로드 타임에 AOP 적용 (최신 마이너 버전)
    implementation "org.aspectj:aspectjweaver:1.9.20"

    // ===== 웹 개발 관련 의존성 (JSP, Servlet, JSTL) =====
    // Java Servlet API - 웹 애플리케이션 개발의 기본 API (안정 버전 유지)
    implementation('javax.servlet:javax.servlet-api:4.0.1')
    // JSP API - JSP 페이지 개발을 위한 API (컴파일 시에만 필요)
    // compileOnly 'javax.servlet.jsp:jsp-api:2.1'
    compileOnly('javax.servlet.jsp:javax.servlet.jsp-api:2.3.3')
    // JSTL - JSP 표준 태그 라이브러리 (안정 버전 유지)
    implementation 'javax.servlet:jstl:1.2'

    // ===== 로깅 시스템 (Log4j2) - 최신 버전으로 업데이트 =====
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
    // Log4j2 API - 로깅 인터페이스 (2.24.1 - 최신 안정 버전, 보안 개선 포함)
    implementation "org.apache.logging.log4j:log4j-api:2.18.0"
    // Log4j2 Core - 로깅 구현체 (성능 및 보안 개선)
    implementation "org.apache.logging.log4j:log4j-core:2.18.0"
    // SLF4J와 Log4j2 연결 - Spring에서 사용하는 SLF4J를 Log4j2로 연결
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.18.0"

    // ===== XML 처리 관련 =====
    // Xerces XML 파서 - XML 내 한글 문자 처리 개선 (안정 버전 유지)
    implementation 'xerces:xercesImpl:2.12.2'

    // ===== 개발 편의성 도구 =====
    // Lombok - 보일러플레이트 코드 자동 생성 (@Getter, @Setter, @ToString 등)
    // 최신 버전으로 업데이트 (Java 17+ 지원 개선)
    compileOnly "org.projectlombok:lombok:${lombokVersion}"                    // 컴파일 시에만 필요
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"            // 어노테이션 처리기

    // ===== JSON 처리 =====
    // Jackson - JSON 직렬화/역직렬화 라이브러리 (Spring 5.3.x와 호환되는 최신 버전)
    // 2.12.7은 Spring Framework 5.3.x와 호환성이 보장되는 안정적인 최신 버전
    implementation "com.fasterxml.jackson.core:jackson-databind:2.9.4"

    // ===== 테스트 관련 의존성 - 최신 버전으로 업데이트 =====
    // Spring Test - Spring 애플리케이션 테스트 지원
    testImplementation "org.springframework:spring-test:${springVersion}"
    // 테스트에서도 Lombok 사용 (최신 버전)
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}